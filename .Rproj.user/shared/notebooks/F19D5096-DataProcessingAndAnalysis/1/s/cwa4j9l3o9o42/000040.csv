"0","# end Date of study to get index data for each patient"
"0","endDate <- as.Date(""2020-10-31"") "
"0",""
"0","# function to convert between numbers and the data"
"0","ChangeTime <- function(og_date, thisYears){"
"0","  if(thisYears[1] < 0){"
"0","    sub <- T"
"0","    thisYears <- abs(thisYears)"
"0","  } else {"
"0","    sub <- F"
"0","  }"
"0","  "
"0","  # sort year value"
"0","  floorYears <- floor(thisYears)"
"0",""
"0","  # sort month value"
"0","  thisMonth <- (thisYears - floorYears) * 12"
"0","  floorMonth <- floor(thisMonth)"
"0","  "
"0","  # sort day value"
"0","  thisDay <- thisMonth - floorMonth"
"0","  thisDay <- round(thisDay * 28)"
"0","  "
"0","  # have to do the months as days because it goes wonky with certain dates otherwise "
"0","  if(sub){"
"0","    og_date -(years(floorYears) + days(floorMonth * 28) + days(thisDay)) "
"0","  } else {"
"0","    og_date + (years(floorYears) + days(floorMonth * 28) + days(thisDay))   "
"0","  }"
"0","}"
"0",""
"0","# format the dataset to look more realistic"
"0","df_patientData <- df_patientData %>% "
"0","  select(-c(Intercept, shape, iter, mu)) %>%"
"0","  mutate(across(c(AdviceandorLed:WaitTimeNewWithinWeek), ~ abs(.x) > 0), "
"0","         indexDate = ChangeTime(endDate, -timeYears), "
"0","         eventDate = ChangeTime(indexDate, EventTime)) %>% "
"0","  select(subj, indexDate, Board, timeYears, everything(), -EventTime)"
"0",""
"0","# add in an mcon column which is based on whether the event was ""positive"""
"0","# NB: The ""Codes_X"" variables are defined in the markdown document which can be "
"0","#     found in the github repository. "
"0","#     They are the same as the codes seen in the readME file for the repository. "
"0","df_patientData$mcon <- sapply(1:nrow(df_patientData), function(i){"
"0","  if(df_patientData$posEvent[i]) {"
"0","    sample(Codes_SI, 1)"
"0","  } else {"
"0","    sample(c(Codes_Cancer, Codes_CVD), 1)"
"0","  }"
"0","})"
"0",""
"0","# Add in some other codes"
"0","df_patientData$ocon <- sapply(1:nrow(df_patientData), function(i){"
"0","  nOthers <- sample(0:5, 1)"
"0","  if(df_patientData$posEvent[i]){"
"0","    output <- sample(c(Codes_SI, Codes_Cancer, Codes_CVD), nOthers)"
"0","  } else {"
"0","    output <- sample(c(Codes_Cancer, Codes_CVD), nOthers)"
"0","  }"
"0","  paste(c(output, rep(""NA"", 5 - nOthers)), collapse = ""|"")"
"0","})"
"0",""
"0","# tidy up the dataset "
"0","df_patientData <- df_patientData %>% "
"0","  separate(ocon, into = paste0(""ocon"", c(1:5)), sep = ""[|]"")"
"0",""
"0","# show the dataset"
"0","reactable(df_patientData)"
