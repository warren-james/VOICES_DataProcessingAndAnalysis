"0","# function to generate times for visits for positive events "
"0","# This is the poisson process, so we use sample time to event from the exponential distribution"
"0","poisProc <- function(Rate, timeObs){"
"0","  # initial values "
"0","  timeSum <- 0"
"0","  outTimes <- c()"
"0","  running <- T"
"0","  "
"0","  # sample from an exponential distribution until we go past the observation time"
"0","  while(running){"
"0","    # generate a timestamp"
"0","    thisTime <- rexp(1, Rate)"
"0","    "
"0","    # add to total"
"0","    timeSum <- timeSum + thisTime"
"0","    "
"0","    # check if we've gone over time"
"0","    if(timeSum > timeObs){"
"0","      # if so, leave the while loop"
"0","      return(outTimes)"
"0","    } else {"
"0","      # otherwise, append to our output"
"0","      outTimes <- c(outTimes, thisTime)"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","# This will generate negative binomial distributed numbers for the total number of events "
"0","# the process is the same as for the poisson data, but the lambda parameter is sampled "
"0","# from a gamma distribution "
"0","nbinomProcess <- function(mu, size, time){"
"0","  # get prob"
"0","  prob <- size / (size + mu)"
"0","  "
"0","  # randomly sample from a gamma distribution to generate lambda values"
"0","  lambda <- rgamma(1, shape = size, rate = prob/(1 - prob))"
"0","  "
"0","  # use the poisProc function to generate a series of timestamps for events"
"0","  return(poisProc(lambda, time))"
"0","}"
"0",""
"0","# Function to generate positive and negative records"
"0","genVisits <- function(nExtra, thisRate, thisSize, thisTime){"
"0","  # generate positive events according to functions described above"
"0","  posVisits <- cumsum(nbinomProcess(thisRate, thisSize, thisTime))"
"0","  "
"0","  # generate random negative events to avoid 0 counts not appearing in the dataset"
"0","  ExtraVisits <- runif(nExtra, 1e-4, thisTime)"
"0","  "
"0","  # combine into a tibble for now... "
"0","  output <- tibble(posEvent = rep(c(1, 0), c(length(posVisits), nExtra)),"
"0","                   time = c(posVisits, ExtraVisits)) %>% "
"0","    arrange(time)"
"0","  "
"0","  return(list(posEvent = output$posEvent,"
"0","              EventTime = output$time))"
"0","}"
"0",""
"0",""
"0",""
