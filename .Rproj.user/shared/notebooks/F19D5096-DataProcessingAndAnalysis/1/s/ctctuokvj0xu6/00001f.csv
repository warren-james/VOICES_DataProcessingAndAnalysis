"0","# post_nbinom %>% "
"0","#   mutate(across(c(2:(ncol(.) - 1)), ~ .x + b_Intercept)) %>%"
"0","#   rowid_to_column(var = ""iter"") %>% "
"0","#   gather(2:(ncol(.) - 1), "
"0","#          key = ""param"", "
"0","#          value = ""coef"") %>%"
"0","#   mutate(mu = exp(coef)) %>%"
"0","#   # expand_grid(time = seq(timeMin, timeMax, .02)) %>% "
"0","#   expand_grid(time = seq(.1, 10, .02)) %>% "
"0","#   mutate(med = qnbinom(.5, shape * time, mu = mu * time)) %>% "
"0","#   group_by(param) %>% "
"0","#   # mean_hdci(coef) %>% "
"0","#   # expand_grid(time = seq(timeMin, timeMax, .02))"
"0","#   ggplot(aes(time, med, colour = param)) + "
"0","#   geom_path(aes(group = iter), "
"0","#             alpha = .3) + "
"0","#   facet_wrap(~param)"
"0",""
"0","# poorly named function... please don't do this, make useful function names"
"0","# this function is also really specific to this problem, so it would need to be adapted "
"0","# for any other model/dataset"
"0","# Using the rnbinom() function is susceptible to the upper and lower bounds moving about due to "
"0","# the nature of these data being integers... "
"0","makePlot <- function(thisModel, minTime, maxTime, res = .02) {"
"0","  post <- thisModel %>% as.matrix() %>% "
"0","    as_tibble() %>% "
"0","    select(-c(lprior, lp__)) %>% "
"0","    mutate(across(2:(ncol(.) - 1), ~ .x + b_Intercept),"
"0","           across(1:(ncol(.) - 1), ~ exp(.x))) %>% "
"0","    gather(1:(ncol(.)), "
"0","           key = ""param"", "
"0","           value = ""coef"") %>% "
"0","    group_by(param) %>% "
"0","    mean_hdci(coef)  %>% "
"0","    expand_grid(time = seq(minTime, maxTime, res)) %>% "
"0","    group_by(param) %>% "
"0","    mutate(iter = row_number()) %>% "
"0","    select(iter, everything()) %>% "
"0","    ungroup() "
"0","  "
"0","  quantile_data <- post %>% "
"0","    select(param, coef, time) %>% "
"0","    spread(param, coef) %>% "
"0","    gather(2:(ncol(.) - 1), "
"0","           key = ""param"", "
"0","           value = ""mu"") %>% "
"0","    mutate(param = str_remove(param, ""b_""), "
"0","           param = str_remove(param, ""TRUE""),"
"0","           q.5 = qnbinom(.5, shape * time, mu = mu * time),"
"0","           q.975 = qnbinom(.975, shape * time, mu = mu * time),"
"0","           q.025 = qnbinom(.025, shape * time, mu = mu * time))"
"0","  "
"0","  mu_post <- post %>% "
"0","    select(-c(.width, .point, .interval)) %>%  "
"0","    filter(!param %in% c(""shape"", ""b_Intercept"")) %>% "
"0","    left_join(post %>%"
"0","                filter(param == ""shape"") %>% "
"0","                select(iter, coef) %>% "
"0","                rename(shape = coef)) %>% "
"0","    mutate(param = str_remove(param, ""b_""), "
"0","           param = str_remove(param, ""TRUE""),"
"0","           q.5_med = qnbinom(.5, shape * time, mu = coef * time),"
"0","           q.5_upr = qnbinom(.5, shape * time, mu = .upper * time),"
"0","           q.5_lwr = qnbinom(.5, shape * time, mu = .lower * time)) "
"0","  "
"0","  quantile_data[quantile_data$param != ""Intercept"",] %>% "
"0","    ggplot(aes(time, q.5, colour = param)) + "
"0","    geom_path(data = quantile_data[quantile_data$param == ""Intercept"",] %>% "
"0","                select(-param), "
"0","              aes(time, q.5),"
"0","              colour = ""black"") +"
"0","    geom_ribbon(data = quantile_data[quantile_data$param == ""Intercept"",] %>% "
"0","                select(-param), "
"0","                aes(ymin = q.025, ymax = q.975), "
"0","                fill = ""black"", "
"0","                colour = ""transparent"","
"0","                alpha = .1) + "
"0","    geom_path() + "
"0","    geom_ribbon(aes(ymin = q.025, ymax = q.975, "
"0","                    fill = param), "
"0","                colour = ""transparent"","
"0","                alpha = .2) +"
"0","    geom_ribbon(data = mu_post,"
"0","                aes(x = time,"
"0","                    ymin = q.5_lwr - .2, ymax = q.5_upr + .2,"
"0","                    y = q.5_med,"
"0","                    fill = param),"
"0","                alpha = .2,"
"0","                linetype = ""longdash"") +"
"0","    scale_x_continuous(""Time since Index Date"") + "
"0","    scale_y_continuous(""Estimated total number of Serious Infections"") +"
"0","    facet_wrap(~param) +"
"0","    theme(legend.position = ""bottom"", "
"0","          panel.grid.major.y = element_line())"
"0","  "
"0","  # return(post)"
"0","}"
"0",""
"0","makePlot(m_nbinom, .1, 24) "
"2","Joining with `by = join_by(iter)`"
