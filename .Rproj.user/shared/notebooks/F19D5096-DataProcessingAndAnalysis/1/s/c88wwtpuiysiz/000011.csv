"0","# create some patient data"
"0","df_patientData <- df_survResps %>% "
"0","  expand_grid(subj = 1:50) %>% "
"0","  mutate(iter = sample(1:nrow(df_SI), nrow(.), replace = T), "
"0","         subj = row_number())"
"0",""
"0","# create a dataset that has the parameter values for each row in the df_patientData"
"0","df_params <- tibble(iter = df_patientData$iter) %>% "
"0","  left_join(df_SI)"
"0",""
"0","# get the parameter values for each patient"
"0","# TODO: Is there a nicer way to do this instead of using a for loop which is really ugly... "
"0","for(i in colnames(df_params)[2:ncol(df_params)]){"
"0","  df_patientData[i] <- df_params[i] * df_patientData[i]"
"0","}  "
"0",""
"0","# create the mu parameter needed for the negative binomial dataset"
"0","timeMin <- .1"
"0","timeMax <- 24"
"0",""
"0","df_patientData <- df_patientData %>% "
"0","  mutate("
"0","    # calculate the mu value for the negative binomial parameter"
"0","    mu = exp(rowSums(across(c(Intercept:WaitTimeNewWithinWeek)))),"
"0","    # add in a random value for the time in study"
"0","    timeYears = round(runif(nrow(.), timeMin, timeMax), digits = 2)"
"0","  )"
